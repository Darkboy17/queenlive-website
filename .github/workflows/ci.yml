name: Build and Push Docker Image

on:
  push:
    branches:
      - main    # Run this when you push to main branch
    paths:
      - 'public/**'                 # new images or assets
      - 'js/**'                     # new JavaScript features
      - 'css/**'                    # style changes
      - 'index.html'                # main HTML changes
      - 'build.js'                  # if you modify the build script
      - 'package.json'              # dependency updates
      - 'Dockerfile'                # changes to the Dockerfile
      - '.github/workflows/ci.yml'  # changes to this workflow
      - 'components/**'             # changes to components
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    resources:
    cpu: 4
    memory: 16GB

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Detect if public/src files changed
        id: changes
        run: |
          echo "CHANGED=false" >> $GITHUB_ENV
          # Check for changes in public/, src/, or build.js
          git fetch origin main --depth=1
          if git diff --name-only HEAD^ HEAD | grep -E '^(public/|src/|build.js)$'; then
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: npm ci

      - name: Run build.js (conditionally)
        if: env.CHANGED == 'true'
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/queenlive:latest

      - name: Logout from Docker Hub
        run: docker logout
