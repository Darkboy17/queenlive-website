name: Build, Push & Deploy Docker Image

on:
  push:
    branches:
      - main    # Run this when you push to main branch
    paths:
      - 'public/**'                 # new images or assets
      - 'js/**'                     # new JavaScript features
      - 'css/**'                    # style changes
      - 'index.html'                # main HTML changes
      - 'build.js'                  # if you modify the build script
      - 'package.json'              # dependency updates
      - 'Dockerfile'                # changes to the Dockerfile
      - '.github/workflows/ci.yml'  # changes to this workflow
      - 'components/**'             # changes to components
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # ---------------- Detect changes -----------------
      - name: Detect changes in public folder
        id: changes
        run: |
          echo "üîç Checking for changes in public/ folder..."
          git fetch origin main --depth=2 || true

          LAST_COMMIT=$(git rev-parse HEAD)
          PREV_COMMIT=$(git rev-list --max-count=2 HEAD | tail -n1)

          echo "Comparing commits: $PREV_COMMIT -> $LAST_COMMIT"

          if git diff --quiet $PREV_COMMIT $LAST_COMMIT -- public/; then
            echo "‚úÖ No changes detected in public/"
            echo "CHANGED=false" >> $GITHUB_ENV
          else
            echo "üü° Changes detected in public/"
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      # ---------------- Build -----------------
      - name: Install dependencies
        run: npm ci

      - name: Run build.js (conditionally)
        if: env.CHANGED == 'true'
        run: |
          echo "üõ†Ô∏è Running build because public/ changed..."
          npm run build

      - name: Skip build (no changes)
        if: env.CHANGED != 'true'
        run: echo "‚è≠Ô∏è Skipping build ‚Äî no changes in public/ folder"

      # ---------------- Docker -----------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        if: env.CHANGED == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/queenlive:latest

      - name: Skip Docker build (no changes)
        if: env.CHANGED != 'true'
        run: echo "‚è≠Ô∏è Skipping Docker build ‚Äî no public/ changes detected"

      - name: Logout from Docker Hub
        run: docker logout

      # ---------------- Auto-deploy -----------------
      - name: Deploy to GCP VM via SSH
        if: env.CHANGED == 'true'
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}
          script: |
            echo "üöÄ Pulling latest Docker image and redeploying..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/queenlive:latest
            docker stop queenlive || true
            docker rm queenlive || true
            docker run -d --name queenlive -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/queenlive:latest

      - name: Skip deploy (no changes)
        if: env.CHANGED != 'true'
        run: echo "‚è≠Ô∏è Skipping deploy ‚Äî nothing new to release"
