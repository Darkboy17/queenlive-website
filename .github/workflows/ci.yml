name: Build, Push & Deploy Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'public/**'
      - 'js/**'
      - 'css/**'
      - 'index.html'
      - 'build.js'
      - 'package.json'
      - 'Dockerfile'
      - '.github/workflows/ci.yml'
      - 'components/**'
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # -----------------------------------------------------------
      # STEP 1️⃣: Checkout code
      # -----------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # -----------------------------------------------------------
      # STEP 2️⃣: Set up Node.js
      # -----------------------------------------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # -----------------------------------------------------------
      # STEP 3️⃣: Detect changes in public folder
      # -----------------------------------------------------------
      - name: Detect changes in public folder
        id: detect_public
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            if git diff --quiet HEAD^ HEAD -- public/; then
              echo "PUBLIC_CHANGED=false" >> $GITHUB_ENV
            else
              echo "PUBLIC_CHANGED=true" >> $GITHUB_ENV
            fi
          else
            echo "First commit detected — forcing build"
            echo "PUBLIC_CHANGED=true" >> $GITHUB_ENV
          fi

      # -----------------------------------------------------------
      # STEP 4️⃣: Install deps and build (only if needed)
      # -----------------------------------------------------------
      - name: Install dependencies
        run: npm ci

      - name: Run build.js (conditionally)
        if: env.PUBLIC_CHANGED == 'true'
        run: npm run build

      # -----------------------------------------------------------
      # STEP 5️⃣: Set up Docker and build image
      # -----------------------------------------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/queenlive:latest

      - name: Logout from Docker Hub
        run: docker logout

      # -----------------------------------------------------------
      # STEP 6️⃣: Deploy to GCP VM
      # -----------------------------------------------------------
      - name: Deploy to GCP VM via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/queenlive:latest
            docker stop queenlive || true
            docker rm queenlive || true
            docker run -d --name queenlive -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/queenlive:latest
